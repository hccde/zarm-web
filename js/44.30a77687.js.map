{"version":3,"sources":["webpack:///./components/tooltip/demo.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/44.30a77687.js","sourcesContent":["export default \"# Tooltip 文字提示\\n文字提示。\\n\\n## 基本用法\\n\\n```jsx\\nimport { Tooltip } from 'zarm-web';\\n\\nReactDOM.render(\\n  <Tooltip content=\\\"我是提示框内容\\\">鼠标移入显示提示框</Tooltip>\\n, mountNode);\\n```\\n\\n## 触发方式\\n通过trigger属性设置不同的tooltip触发方式\\n```jsx\\nimport { Tooltip, Button } from 'zarm-web';\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props)\\n    this.state = {\\n      visible: false\\n    }\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <Tooltip trigger=\\\"click\\\" content=\\\"我是click触发方式\\\">\\n          <Button theme=\\\"primary\\\">click me</Button>\\n        </Tooltip>\\n        <Tooltip trigger=\\\"hover\\\" content=\\\"我是鼠标移入触发方式\\\">\\n          <Button theme=\\\"primary\\\">hover me</Button>\\n        </Tooltip>\\n        <Tooltip trigger=\\\"manual\\\" visible={this.state.visible} content=\\\"我是manual触发方式，通过传入的visible props控制\\\">\\n          <Button onClick={() => this.setState({ visible: !this.state.visible })} theme=\\\"primary\\\">manual</Button>\\n        </Tooltip>\\n        <Tooltip trigger=\\\"focus\\\" content=\\\"我是focus触发方式\\\">\\n          <Button theme=\\\"primary\\\">focus</Button>\\n        </Tooltip>\\n        <Tooltip trigger=\\\"contextMenu\\\" content=\\\"我是右键点击触发方式\\\">\\n          <Button theme=\\\"primary\\\">contextmenu</Button>\\n        </Tooltip>\\n      </div>\\n    )\\n  }\\n}\\n\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 位置\\n支持各种方位。\\n\\n```jsx\\nimport { Tooltip, Button } from 'zarm-web';\\n\\nconst Demo = () => (\\n  <div className=\\\"direction-demo\\\">\\n        <div style={{ marginLeft: 70 }}>\\n          <Tooltip direction=\\\"topLeft\\\" content=\\\"topLeft text\\\">\\n            <Button>TL</Button>\\n          </Tooltip>\\n\\n          <Tooltip direction=\\\"top\\\" content=\\\"top text\\\">\\n            <Button>Top</Button>\\n          </Tooltip>\\n\\n          <Tooltip direction=\\\"topRight\\\" content=\\\"topRight text\\\">\\n            <Button>TR</Button>\\n          </Tooltip>\\n        </div>\\n\\n        <div style={{ width: 70, float: \\\"left\\\",  clear: 'both' }}>\\n          <Tooltip direction=\\\"leftTop\\\" content=\\\"leftTop text\\\">\\n            <Button>LT</Button>\\n          </Tooltip>\\n\\n          <Tooltip direction=\\\"left\\\" content=\\\"left text\\\">\\n            <Button>Left</Button>\\n          </Tooltip>\\n\\n          <Tooltip direction=\\\"leftBottom\\\" content=\\\"leftBottom text\\\">\\n            <Button>LB</Button>\\n          </Tooltip>\\n        </div>\\n\\n        <div style={{ width: 70, marginLeft: 70 * 4 }}>\\n          <Tooltip direction=\\\"rightTop\\\" content=\\\"rightTop text\\\">\\n            <Button>RT</Button>\\n          </Tooltip>\\n\\n          <Tooltip direction=\\\"right\\\" content=\\\"right text\\\">\\n            <Button>Right</Button>\\n          </Tooltip>\\n\\n          <Tooltip direction=\\\"rightBottom\\\" content=\\\"rightBottom text\\\">\\n            <Button>RB</Button>\\n          </Tooltip>\\n        </div>\\n\\n        <div style={{ marginLeft: 70, clear: 'both' }}>\\n          <Tooltip direction=\\\"bottomLeft\\\" content=\\\"bottomLeft text\\\">\\n            <Button>BL</Button>\\n          </Tooltip>\\n\\n          <Tooltip direction=\\\"bottom\\\" content=\\\"bottom text\\\">\\n            <Button>Bottom</Button>\\n          </Tooltip>\\n\\n          <Tooltip direction=\\\"bottomRight\\\" content=\\\"bottomRight text\\\">\\n            <Button>BR</Button>\\n          </Tooltip>\\n        </div>\\n      </div>\\n);\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n## 箭头指向\\n\\n```jsx\\nimport { Tooltip, Button } from 'zarm-web';\\n\\nReactDOM.render(\\n  <div>\\n    <Tooltip direction=\\\"topLeft\\\" content=\\\"Prompt Text\\\">\\n      <Button>跟随方向</Button>\\n    </Tooltip>\\n    <Tooltip direction=\\\"topLeft\\\" content=\\\"Prompt Text\\\" arrowPointAtCenter>\\n      <Button>元素中心</Button>\\n    </Tooltip>\\n  </div>,\\n  mountNode,\\n);\\n```\\n\\n## API\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| theme | string | light/dark | 默认提供的主题 |\\n| className | string | - | 类名追加 |\\n| content | ReactNode | - | 显示内容 |\\n| hasArrow | boolean | false | 是否显示箭头节点 |\\n| destroy | boolean | true | 关闭后是否移除节点 |\\n| getContainer | HTMLElement &#124; () => HTMLElement | document.body | 指定 Tooltip 挂载的 HTML 节点 |\\n| animationType | string | 'zoom-fade' | 可选值 `fade`, `door`, `flip`, `rotate`, `zoom`,`moveUp`, `moveDown`, `moveLeft`, `moveRight`,`slideUp`, `slideDown`, `slideLeft`, `slideRight` |\\n| animationDuration | number | 200 | 动画执行时间（单位：毫秒） |\\n| arrowPointAtCenter | boolean | false | 箭头是否指向目标元素中心 |\\n| mouseEnterDelay | number | 100 | 鼠标移入显示的延时时间（单位：毫秒） |\\n| mouseLeaveDelay | number | 100 | 鼠标移出隐藏的延时时间（单位：毫秒） |\\n| direction | string | 'top' | 显示方向，可选值 `topLeft`、`top`、`topRight`、`rightTop`、`right`、`rightBottom`、`bottomLeft`、`bottom`、`bottomRight`、`leftTop`、`left`、`leftBottom` |\\n| trigger | string | 移动端为'click' <br /> 桌面端为'hover' | 触发方式，可选值为：`click` 点击触发状态、`hover` hover状态触发、`focus` 聚焦状态触发、`manual` 受控触发、`contextMenu` 右键触发 |\\n| visible | boolean | false | 是否显示，`trigger='manual'` 时有效 |\\n| onVisibleChange | (visible?: boolean) => void | noop | 显示/隐藏 触发的事件 |\\n\\n\\n\\n\""],"sourceRoot":""}