{"version":3,"sources":["webpack:///./components/radio/radio.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/34.1296f82a.js","sourcesContent":["export default \"## Radio 单选框\\n单选框。\\n\\n### 基础用法\\n\\n单独使用，表示在两种状态之间切换。\\n\\n:::demo\\n\\n```js\\nimport { Radio } from 'dragon-ui';\\n\\nclass Demo extends React.Component {\\n  onChange(e) {\\n    console.log(e.target.value);\\n  }\\n  render() {\\n    return (\\n      <div>\\n        <Radio\\n          value=\\\"a\\\"\\n          onChange={(e) => this.onChange(e)}\\n        >\\n          选择\\n        </Radio>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n:::\\n\\n### 组合使用\\n\\n一组可选项中选择一项。\\n\\n:::demo 使用`Radio.Group`组件。\\n\\n```js\\nimport { Radio } from 'dragon-ui';\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      radioValue: 'a'\\n    }\\n  }\\n  render() {\\n    return (\\n      <div>\\n        <div style={{marginBottom: 8}}>选择了：{this.state.radioValue}</div>\\n        <Radio.Group\\n          value={this.state.radioValue}\\n          onChange={(e) => {\\n            this.setState({\\n              radioValue: e.target.value\\n            });\\n          }}\\n        >\\n          <Radio value=\\\"a\\\">A</Radio>\\n          <Radio value=\\\"b\\\">B</Radio>\\n          <Radio value=\\\"c\\\">C</Radio>\\n          <Radio value=\\\"d\\\">D</Radio>\\n        </Radio.Group>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n:::\\n\\n### 按钮样式单选、不同尺寸\\n\\n:::demo 使用`Radio.Group`组件。\\n\\n```js\\nimport { Radio } from 'dragon-ui';\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      radioValue: ''\\n    }\\n  }\\n  render() {\\n    return (\\n      <div>\\n        <div style={{marginBottom: 8}}>选择了：{this.state.radioValue}</div>\\n        <div className=\\\"multi-rows\\\">\\n          <Radio.Group\\n            size=\\\"lg\\\"\\n            value={this.state.radioValue}\\n            onChange={(e) => {\\n              this.setState({\\n                radioValue: e.target.value\\n              });\\n            }}\\n          >\\n            <Radio.Button value=\\\"上网\\\">上网</Radio.Button>\\n            <Radio.Button value=\\\"篮球\\\">篮球</Radio.Button>\\n            <Radio.Button value=\\\"足球\\\">足球</Radio.Button>\\n            <Radio.Button value=\\\"羽毛球\\\">羽毛球</Radio.Button>\\n          </Radio.Group>\\n        </div>\\n        <div className=\\\"multi-rows\\\">\\n          <Radio.Group\\n            value={this.state.radioValue}\\n            onChange={(e) => {\\n              this.setState({\\n                radioValue: e.target.value\\n              });\\n            }}\\n          >\\n            <Radio.Button value=\\\"上网1\\\">上网1</Radio.Button>\\n            <Radio.Button value=\\\"篮球1\\\">篮球1</Radio.Button>\\n            <Radio.Button value=\\\"足球1\\\">足球1</Radio.Button>\\n            <Radio.Button value=\\\"羽毛球1\\\">羽毛球1</Radio.Button>\\n          </Radio.Group>\\n        </div>\\n        <div className=\\\"multi-rows\\\">\\n          <Radio.Group\\n            size=\\\"sm\\\"\\n            value={this.state.radioValue}\\n            onChange={(e) => {\\n              this.setState({\\n                radioValue: e.target.value\\n              });\\n            }}\\n          >\\n            <Radio.Button disabled value=\\\"上网2\\\">上网2</Radio.Button>\\n            <Radio.Button value=\\\"篮球2\\\">篮球2</Radio.Button>\\n            <Radio.Button value=\\\"足球2\\\">足球2</Radio.Button>\\n            <Radio.Button value=\\\"羽毛球2\\\">羽毛球2</Radio.Button>\\n          </Radio.Group>\\n        </div>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n:::\\n\\n### 禁用状态\\n\\n不可勾选状态。\\n\\n:::demo 可以使用`disabled`属性来定义是否可用。\\n\\n```js\\nimport { Radio } from 'dragon-ui';\\n\\nclass Demo extends React.Component {\\n  render() {\\n    return (\\n      <div>\\n        <Radio disabled onChange={(e) => this.onChange(e)}>选择</Radio>&nbsp;&nbsp;&nbsp;&nbsp;\\n        <Radio disabled checked onChange={(e) => this.onChange(e)}>选择</Radio>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n:::\\n\\n\\n### Radio Attributes\\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\\n|---------- |-------- |---------- |-------------  |-------- |\\n| checked     | 是否选中  | boolean  |   -           |    false    |\\n| defaultChecked    | 默认选中  | boolean   |   - |     false   |\\n| disabled  | 禁用    | -   | -  | -   |\\n| value  | 选择框对应的值    | string   | -  | -   |\\n\\n### Radio Events\\n| 事件名称 | 说明 | 回调参数 |\\n|---------- |-------- |---------- |\\n| onChange | 勾选状态变化触发的事件 | event |\\n\\n### Radio.Group Attributes\\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\\n|---------- |-------- |---------- |-------------  |-------- |\\n| value     | 选中的值  | string  |   -           |    false    |\\n| defaultValue    | 默认选中的值  | string  |   - |     false   |\\n\\n### Radio.Group Events\\n| 事件名称 | 说明 | 回调参数 |\\n|---------- |-------- |---------- |\\n| onChange | 勾选状态变化触发的事件 | event |\\n\""],"sourceRoot":""}