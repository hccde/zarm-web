{"version":3,"sources":["webpack:///./components/layout/layout.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/20.14414c33.js","sourcesContent":["export default \"# Layout 布局\\n\\n页面整体布局组件。\\n\\n\\n\\n## 基础用法\\n\\n上中下布局。\\n\\n```jsx\\nimport { Layout } from 'zarm-web';\\n\\nclass Demo extends React.Component {\\n  render() {\\n    const layoutStyle = {\\n      color: '#fff',\\n      textAlign: 'center'\\n    };\\n    const contentStyle = {\\n      height: 140,\\n      background: '#001529',\\n      opacity: 0.4,\\n      lineHeight: '140px',\\n    };\\n    const footerStyle = {\\n      background: '#001529',\\n    }\\n    return (\\n      <div>\\n        <Layout style={layoutStyle}>\\n          <Layout.Header>Header</Layout.Header>\\n          <Layout.Content style={contentStyle}>Content</Layout.Content>\\n          <Layout.Footer style={footerStyle}>Footer</Layout.Footer>\\n        </Layout>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode)\\n```\\n\\n## 带侧边\\n\\n上中下布局+侧边。\\n\\n```jsx\\nimport { Layout } from 'zarm-web';\\n\\nclass Demo extends React.Component {\\n  render() {\\n    const layoutStyle = {\\n      color: '#fff',\\n      textAlign: 'center'\\n    };\\n    const contentStyle = {\\n      height: 140,\\n      background: '#001529',\\n      opacity: 0.4,\\n      lineHeight: '140px',\\n    };\\n    const siderStyle = {\\n      opacity: 0.8,\\n      lineHeight: '140px',\\n    }\\n    const footerStyle = {\\n      background: '#001529',\\n    }\\n    return (\\n      <div>\\n        <Layout style={layoutStyle}>\\n          <Layout.Header>Header</Layout.Header>\\n          <Layout>\\n            <Layout.Sider style={siderStyle}>Sider</Layout.Sider>\\n            <Layout.Content style={contentStyle}>Content</Layout.Content>\\n          </Layout>\\n          <Layout.Footer style={footerStyle}>Footer</Layout.Footer>\\n        </Layout>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode)\\n```\\n\\n## 侧边布局\\n\\n```jsx\\nimport { Layout } from 'zarm-web';\\n\\nclass Demo extends React.Component {\\n  render() {\\n    const layoutStyle = {\\n      color: '#fff',\\n      textAlign: 'center'\\n    };\\n    const contentStyle = {\\n      height: 180,\\n      background: '#001529',\\n      opacity: 0.4,\\n      lineHeight: '180px',\\n    };\\n    const siderStyle = {\\n      opacity: 0.8,\\n      lineHeight: '180px',\\n    }\\n    return (\\n      <div>\\n        <Layout style={layoutStyle}>\\n          <Layout.Sider style={siderStyle}>Sider</Layout.Sider>\\n          <Layout>\\n            <Layout.Header>Header</Layout.Header>\\n            <Layout.Content style={contentStyle}>Content</Layout.Content>\\n          </Layout>\\n        </Layout>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode)\\n```\\n\\n## 可折叠侧边\\n\\n```jsx\\nimport { Layout } from 'zarm-web';\\n\\nclass Demo extends React.Component {\\n  render() {\\n    const layoutStyle = {\\n      color: '#fff',\\n      textAlign: 'center'\\n    };\\n    const contentStyle = {\\n      height: 180,\\n      background: '#001529',\\n      opacity: 0.4,\\n      lineHeight: '180px',\\n    };\\n    const siderStyle = {\\n      opacity: 0.8,\\n      lineHeight: '180px',\\n    }\\n    const footerStyle = {\\n      background: '#001529',\\n    }\\n    return (\\n      <div>\\n        <Layout style={layoutStyle}>\\n          <Layout.Sider onCollapse={collapsed => console.log(collapsed)} collapsible style={siderStyle}>\\n            Sider\\n          </Layout.Sider>\\n          <Layout>\\n            <Layout.Header>Header</Layout.Header>\\n            <Layout.Content style={contentStyle}>Content</Layout.Content>\\n          </Layout>\\n        </Layout>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode)\\n```\\n\\n## API\\n\\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\\n|---------- |-------- |---------- |-------------  |-------- |\\n| style     | 自定义样式   | object  |   -     |    -     |\\n| className  | 样式类名 | string  |   -     |    -  |\\n\\nHeader,Content,Footer组件属性同Layout。\\n\\nSider Attributes\\n\\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\\n|---------- |-------- |---------- |-------------  |-------- |\\n| collapsible     | 是否可折叠 | boolean  |   -   |    False   |\\n| collapsed  | 折叠状态 | boolean  |   -     |    False  |\\n| collapsedWidth  | 折叠时候的宽度 | numer  |   -     |    80  |\\n| width  | 未折叠时候的宽度 | numer  |   -     |    236  |\\n| trigger  | 自定义折叠触发的trigger，设为null隐藏 | string/ReactNode  |   -     |    -  |\\n\\nSider Events\\n| 事件名称 | 说明 | 回调参数 |\\n|---------- |-------- |---------- |\\n| onCollapse | 折叠事件发生时触发 | collapsed |\\n\""],"sourceRoot":""}