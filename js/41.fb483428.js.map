{"version":3,"sources":["webpack:///./components/table/table.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/41.fb483428.js","sourcesContent":["export default \"## Table 表格\\n用于展示大量数据。\\n\\n### 基础用法\\n\\n:::demo 指定`columns`和`dataSource`属性。\\n\\n```js\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      dataSource: [\\n        {\\n          id: '1',\\n          name: '张三',\\n          dept: '直营部',\\n          age: 46,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: '上海市杨浦区四平路324号',\\n            comp: '1xxx公司'\\n          },\\n          state: true\\n        },\\n        {\\n          id: '2',\\n          name: '李四',\\n          dept: '健康险事业部',\\n          age: 32,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: 'aaaa',\\n            comp: '2xxx公司'\\n          },\\n          state: true\\n        },\\n        {\\n          id: '3',\\n          name: '王五',\\n          dept: '金融信保部',\\n          age: 20,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: '上海市浦东区张杨路1400号',\\n            comp: '3xxx公司'\\n          },\\n          state: false\\n        },\\n        {\\n          id: '4',\\n          name: '奥巴马',\\n          dept: '健康险事业部',\\n          age: 45,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: '美国洛杉矶',\\n            comp: '2xxx公司'\\n          },\\n          state: false\\n        },\\n      ],\\n    }\\n  }\\n\\n  render() {\\n    const { dataSource } = this.state;\\n    return (\\n      <div>\\n        <Table\\n          striped\\n          // hover\\n          bordered\\n          dataSource={dataSource}\\n          columns={[{\\n            dataIndex: 'id',\\n            width: 50,\\n            render: (value, row, index) => {\\n              return index + 1;\\n            }\\n          },{\\n            title: '姓名',\\n            dataIndex: 'name',\\n            width: 100,\\n            render: (value, row, index) => {\\n              return <a href=\\\"javascript:;\\\">{value}</a>;\\n            },\\n            sorter: (a, b) => {\\n              return a.name.localeCompare(b.name);\\n            }\\n          },{\\n            title: '部门',\\n            dataIndex: 'dept',\\n            width: 130,\\n            render: (value, row, index) => {\\n              return (\\n                <Select size=\\\"sm\\\" value={value} style={{width: 130}}>\\n                  <Select.Option value=\\\"直营部\\\">直营部</Select.Option>\\n                  <Select.Option value=\\\"健康险事业部\\\">健康险事业部</Select.Option>\\n                  <Select.Option value=\\\"金融信保部\\\">金融信保部</Select.Option>\\n                  <Select.Option value=\\\"人力资源部\\\">人力资源部</Select.Option>\\n                </Select>\\n              );\\n            },\\n            sorter: (a, b) => {\\n              return a.dept.localeCompare(b.dept);\\n            }\\n          },{\\n            title: '年龄',\\n            dataIndex: 'age',\\n            width: 80,\\n            render: (value, row, index) => {\\n              return <Input size=\\\"sm\\\" style={{width: 40}} value={value} maxLength=\\\"3\\\" onChange={(e) => {\\n                let dataSource = this.state.dataSource;\\n                dataSource[index].age = e.target.value;\\n                this.setState({dataSource});\\n              }}/>;\\n            },\\n            sorter: (a, b) => {\\n              return a.age - b.age;\\n            }\\n          },{\\n            title: '家庭住址',\\n            dataIndex: 'address',\\n            render: (value, row, index) => {\\n              return value.home\\n            }\\n          },\\n          {\\n            title: '公司地址',\\n            dataIndex: 'address',\\n            render: (value, row, index) => {\\n              return value.comp\\n            }\\n          },{\\n            title: '状态',\\n            dataIndex: 'state',\\n            width: 100,\\n            render: (value, row, index) => {\\n              return <Switch size=\\\"sm\\\" value={value} />;\\n            },\\n            sorter: (a, b) => {\\n              return a.state - b.state;\\n            }\\n          },{\\n            title: '操作',\\n            dataIndex: 'op',\\n            width: 120,\\n            render: (value, row, index) => {\\n              return (\\n                <div style={{color: '#ccc'}}>\\n                  <a href=\\\"javascript:;\\\" onClick={(e) => {\\n                    e.stopPropagation();  //避免触发rowClick事件\\n                    alert('编辑')\\n                  }}>编辑</a>\\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\\n                  <a href=\\\"javascript:;\\\" onClick={(e) => {\\n                    e.stopPropagation();  //避免触发rowClick事件\\n                    alert('删除')\\n                  }}>删除</a>\\n                </div>\\n              );\\n            }\\n          }]}\\n          rowClick={(row) => {\\n            console.log(row);\\n          }}\\n          rowClassName={(row) => {\\n            if(row.age == 46) {\\n              return 'bg'\\n            }\\n          }}\\n          rowSelection={{\\n            // value: this.state.tableSelection,\\n            onSelect: (selected, row, selectedRows) => {\\n              console.log(selected, row, selectedRows);\\n              let tableSelection = this.state.tableSelection;\\n              tableSelection = selectedRows;\\n              this.setState({tableSelection});\\n            },\\n            onSelectAll: (selected, selectedRows) => {\\n              console.log(selected, selectedRows);\\n              let tableSelection = this.state.tableSelection;\\n              tableSelection = selectedRows;\\n              this.setState({tableSelection});\\n            }\\n          }}>\\n        </Table>\\n      </div>\\n    )\\n  }\\n```\\n:::\\n\\n### 固定操作列\\n\\n:::demo 指定`fixed`属性。\\n\\n```js\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      dataSource: [\\n        {\\n          id: '1',\\n          name: '张三',\\n          dept: '直营部',\\n          age: 46,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: '上海市杨浦区四平路324号上海市杨浦区四平路324号上海市杨浦区四平路324号上海市杨浦区四平路324号',\\n            comp: '1xxx公司'\\n          },\\n          state: true\\n        },\\n        {\\n          id: '2',\\n          name: '李四',\\n          dept: '健康险事业部',\\n          age: 32,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: 'aaaa',\\n            comp: '2xxx公司'\\n          },\\n          state: true\\n        },\\n        {\\n          id: '3',\\n          name: '王五',\\n          dept: '金融信保部',\\n          age: 20,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: '上海市浦东区张杨路1400号',\\n            comp: '3xxx公司'\\n          },\\n          state: false\\n        },\\n        {\\n          id: '4',\\n          name: '奥巴马',\\n          dept: '健康险事业部',\\n          age: 45,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: '美国洛杉矶',\\n            comp: '2xxx公司'\\n          },\\n          state: false\\n        },\\n      ],\\n    }\\n  }\\n  render() {\\n    const { dataSource } = this.state;\\n    return (\\n      <div>\\n        <Table\\n          // striped\\n          hover\\n          dataSource={dataSource}\\n          columns={[{\\n            dataIndex: 'id',\\n            width: 50,\\n            render: (value, row, index) => {\\n              return index + 1;\\n            }\\n          },{\\n            title: '姓名',\\n            dataIndex: 'name',\\n            width: 100,\\n            render: (value, row, index) => {\\n              return <a href=\\\"javascript:;\\\">{value}</a>;\\n            },\\n            sorter: (a, b) => {\\n              return a.name.localeCompare(b.name);\\n            }\\n          },{\\n            title: '部门',\\n            dataIndex: 'dept',\\n            width: 130,\\n            render: (value, row, index) => {\\n              return (\\n                <Select size=\\\"sm\\\" value={value} style={{width: 130}}>\\n                  <Select.Option value=\\\"直营部\\\">直营部</Select.Option>\\n                  <Select.Option value=\\\"健康险事业部\\\">健康险事业部</Select.Option>\\n                  <Select.Option value=\\\"金融信保部\\\">金融信保部</Select.Option>\\n                  <Select.Option value=\\\"人力资源部\\\">人力资源部</Select.Option>\\n                </Select>\\n              );\\n            },\\n            sorter: (a, b) => {\\n              return a.dept.localeCompare(b.dept);\\n            }\\n          },{\\n            title: '年龄',\\n            dataIndex: 'age',\\n            width: 80,\\n            render: (value, row, index) => {\\n              return <Input size=\\\"sm\\\" style={{width: 40}} value={value} maxLength=\\\"3\\\" onChange={(e) => {\\n                let dataSource = this.state.dataSource;\\n                dataSource[index].age = e.target.value;\\n                this.setState({dataSource});\\n              }}/>;\\n            },\\n            sorter: (a, b) => {\\n              return a.age - b.age;\\n            }\\n          },{\\n            title: '家庭住址',\\n            dataIndex: 'address',\\n            render: (value, row, index) => {\\n              return value.home\\n            }\\n          },\\n          {\\n            title: '公司地址',\\n            dataIndex: 'address',\\n            render: (value, row, index) => {\\n              return value.comp\\n            }\\n          },{\\n            title: '状态',\\n            dataIndex: 'state',\\n            width: 100,\\n            render: (value, row, index) => {\\n              return <Switch size=\\\"sm\\\" value={value} />;\\n            },\\n            sorter: (a, b) => {\\n              return a.state - b.state;\\n            }\\n          },{\\n            title: '操作',\\n            dataIndex: 'op',\\n            fixed: 'right',\\n            width: 120,\\n            render: (value, row, index) => {\\n              return (\\n                <div style={{color: '#ccc'}}>\\n                  <a href=\\\"javascript:;\\\" onClick={(e) => {\\n                    e.stopPropagation();  //避免触发rowClick事件\\n                    alert('编辑')\\n                  }}>编辑</a>\\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\\n                  <a href=\\\"javascript:;\\\" onClick={(e) => {\\n                    e.stopPropagation();  //避免触发rowClick事件\\n                    alert('删除')\\n                  }}>删除</a>\\n                </div>\\n              );\\n            }\\n          }]}\\n          rowClick={(row) => {\\n            console.log(row);\\n          }}\\n          rowClassName={(row) => {\\n            if(row.age == 46) {\\n              return 'bg'\\n            }\\n          }}\\n          rowSelection={{\\n            fixed: true,\\n            onSelect: (selected, row, selectedRows) => {\\n              console.log(selected, row, selectedRows);\\n              let tableSelection = this.state.tableSelection;\\n              tableSelection = selectedRows;\\n              this.setState({tableSelection});\\n            },\\n            onSelectAll: (selected, selectedRows) => {\\n              console.log(selected, selectedRows);\\n              let tableSelection = this.state.tableSelection;\\n              tableSelection = selectedRows;\\n              this.setState({tableSelection});\\n            }\\n          }}>\\n        </Table>\\n      </div>\\n    )\\n  }\\n```\\n:::\\n\\n### 表头分组和单元格合并\\n\\n:::demo\\n\\n```js\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      dataSource: [\\n        {\\n          id: '1',\\n          name: '张三',\\n          dept: '直营部',\\n          age: 46,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: '上海市杨浦区四平路324号',\\n            comp: '1xxx公司'\\n          },\\n          state: true\\n        },\\n        {\\n          id: '2',\\n          name: '李四',\\n          dept: '健康险事业部',\\n          age: 32,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: 'aaaa',\\n            comp: '2xxx公司'\\n          },\\n          state: true\\n        },\\n        {\\n          id: '3',\\n          name: '王五',\\n          dept: '金融信保部',\\n          age: 20,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: '上海市浦东区张杨路1400号',\\n            comp: '3xxx公司'\\n          },\\n          state: false\\n        },\\n        {\\n          id: '4',\\n          name: '奥巴马',\\n          dept: '健康险事业部',\\n          age: 45,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: '美国洛杉矶',\\n            comp: '2xxx公司'\\n          },\\n          state: false\\n        },\\n      ],\\n    }\\n  }\\n  render() {\\n    const { dataSource } = this.state;\\n    return (\\n      <div>\\n        <Table\\n          // hover\\n          bordered\\n          dataSource={dataSource}\\n          columns={[{\\n            dataIndex: 'id',\\n            width: 50,\\n            render: (value, row, index) => {\\n              return index + 1;\\n            }\\n          },{\\n            title: '姓名',\\n            dataIndex: 'name',\\n            width: 100,\\n            render: (value, row, index) => {\\n              return <a href=\\\"javascript:;\\\">{value}</a>; \\n            },\\n            sorter: (a, b) => {\\n              return a.name.localeCompare(b.name);\\n            }\\n          },{\\n            title: '联系方式',\\n            dataIndex: 'contact',\\n            children: [\\n              {\\n                title: '手机',\\n                dataIndex: 'mobile',\\n                children: [\\n                  {\\n                    title: 'iphone',\\n                    dataIndex: 'iphone',\\n                    render: (value, row, index) => {\\n                      {/* colSpan例子 */}\\n                      if (index === 1) {\\n                        return {\\n                          value,\\n                          colSpan: 2\\n                        }\\n                      }\\n                      return value;\\n                    }\\n                  },\\n                  {\\n                    title: 'android',\\n                    dataIndex: 'android',\\n                    render: (value, row, index) => {\\n                      {/* colSpan例子 */}\\n                      if (index === 1) {\\n                        return {\\n                          colSpan: 0\\n                        }\\n                      }\\n                      return value;\\n                    }\\n                  }\\n                ]\\n              },\\n              {\\n                title: '固话',\\n                dataIndex: 'tel'\\n              }\\n            ]\\n          },{\\n            title: '家庭住址',\\n            dataIndex: 'address',\\n            render: (value, row, index) => {\\n              {/* rowSpan例子 */}\\n              if (index === 1) {\\n                return {\\n                  value: value.home,\\n                  rowSpan: 2\\n                }\\n              }\\n              if (index === 2) {\\n                return {\\n                  rowSpan: 0\\n                }\\n              }\\n              return value.home\\n            }\\n          },\\n          {\\n            title: '公司地址',\\n            dataIndex: 'address',\\n            render: (value, row, index) => {\\n              return value.comp\\n            }\\n          },{\\n            title: '状态',\\n            dataIndex: 'state',\\n            width: 100,\\n            render: (value, row, index) => {\\n              return <Switch size=\\\"sm\\\" value={value} />;\\n            },\\n            sorter: (a, b) => {\\n              return a.state - b.state;\\n            }\\n          },{\\n            title: '操作',\\n            dataIndex: 'op',\\n            width: 120,\\n            render: (value, row, index) => {\\n              return (\\n                <div style={{color: '#ccc'}}>\\n                  <a href=\\\"javascript:;\\\" onClick={(e) => {\\n                    e.stopPropagation();  //避免触发rowClick事件\\n                    alert('编辑');\\n                  }}>编辑</a>\\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\\n                  <a href=\\\"javascript:;\\\" onClick={(e) => {\\n                    e.stopPropagation();  //避免触发rowClick事件\\n                    alert('删除');\\n                  }}>删除</a>\\n                </div>\\n              );\\n            }\\n          }]}\\n          rowClick={(row) => {\\n            console.log(row);\\n          }}\\n          rowSelection={{\\n            // value: this.state.tableSelection,\\n            onSelect: (selected, row, selectedRows) => {\\n              console.log(selected, row, selectedRows);\\n              let tableSelection = this.state.tableSelection;\\n              tableSelection = selectedRows;\\n              this.setState({tableSelection});\\n            },\\n            onSelectAll: (selected, selectedRows) => {\\n              console.log(selected, selectedRows);\\n              let tableSelection = this.state.tableSelection;\\n              tableSelection = selectedRows;\\n              this.setState({tableSelection});\\n            }\\n          }}>\\n        </Table>\\n      </div>\\n    )\\n  }\\n```\\n:::\\n\\n\\n### 可展开行\\n\\n:::demo 指定`columns`和`dataSource`属性。\\n\\n```js\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      dataSource: [\\n        {\\n          id: '1',\\n          name: '张三',\\n          dept: '直营部',\\n          age: 46,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: '上海市杨浦区四平路324号',\\n            comp: '1xxx公司'\\n          },\\n          state: true\\n        },\\n        {\\n          id: '2',\\n          name: '李四',\\n          dept: '健康险事业部',\\n          age: 32,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: 'aaaa',\\n            comp: '2xxx公司'\\n          },\\n          state: true\\n        },\\n        {\\n          id: '3',\\n          name: '王五',\\n          dept: '金融信保部',\\n          age: 20,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: '上海市浦东区张杨路1400号',\\n            comp: '3xxx公司'\\n          },\\n          state: false\\n        },\\n        {\\n          id: '4',\\n          name: '奥巴马',\\n          dept: '健康险事业部',\\n          age: 45,\\n          iphone: '15617283931',\\n          android: '15617283930',\\n          tel: '23412341231',\\n          address: {\\n            home: '美国洛杉矶',\\n            comp: '2xxx公司'\\n          },\\n          state: false\\n        },\\n      ],\\n    }\\n  }\\n\\n  render() {\\n    const { dataSource } = this.state;\\n    return (\\n      <div>\\n        <Table\\n          // bordered\\n          hover\\n          onExpand={(expanded, row) => {\\n            console.log(expanded);\\n            console.log(row);\\n          }}\\n          expandedRowRender={(row, index) => {\\n            return (\\n              <div style={{ width: 600 }}>\\n                <div>第 {index + 1} 行数据：</div>\\n                <div><pre>{JSON.stringify(row)}</pre></div>\\n              </div>\\n            );\\n          }}\\n          expandedRowKeys={[0]}\\n          dataSource={dataSource}\\n          columns={[{\\n            dataIndex: 'id',\\n            width: 50,\\n            render: (value, row, index) => {\\n              return index + 1;\\n            }\\n          },{\\n            title: '姓名',\\n            dataIndex: 'name',\\n            width: 100,\\n            render: (value, row, index) => {\\n              return <a href=\\\"javascript:;\\\">{value}</a>;\\n            },\\n            sorter: (a, b) => {\\n              return a.name.localeCompare(b.name);\\n            }\\n          },{\\n            title: '部门',\\n            dataIndex: 'dept',\\n            width: 130,\\n            render: (value, row, index) => {\\n              return (\\n                <Select size=\\\"sm\\\" value={value} style={{width: 130}}>\\n                  <Select.Option value=\\\"直营部\\\">直营部</Select.Option>\\n                  <Select.Option value=\\\"健康险事业部\\\">健康险事业部</Select.Option>\\n                  <Select.Option value=\\\"金融信保部\\\">金融信保部</Select.Option>\\n                  <Select.Option value=\\\"人力资源部\\\">人力资源部</Select.Option>\\n                </Select>\\n              );\\n            },\\n            sorter: (a, b) => {\\n              return a.dept.localeCompare(b.dept);\\n            }\\n          },{\\n            title: '年龄',\\n            dataIndex: 'age',\\n            width: 80,\\n            render: (value, row, index) => {\\n              return <Input size=\\\"sm\\\" style={{width: 40}} value={value} maxLength=\\\"3\\\" onChange={(e) => {\\n                let dataSource = this.state.dataSource;\\n                dataSource[index].age = e.target.value;\\n                this.setState({dataSource});\\n              }}/>;\\n            },\\n            sorter: (a, b) => {\\n              return a.age - b.age;\\n            }\\n          },{\\n            title: '家庭住址',\\n            dataIndex: 'address',\\n            render: (value, row, index) => {\\n              return value.home\\n            }\\n          },\\n          {\\n            title: '公司地址',\\n            dataIndex: 'address',\\n            render: (value, row, index) => {\\n              return value.comp\\n            }\\n          },{\\n            title: '状态',\\n            dataIndex: 'state',\\n            width: 100,\\n            render: (value, row, index) => {\\n              return <Switch size=\\\"sm\\\" value={value} />;\\n            },\\n            sorter: (a, b) => {\\n              return a.state - b.state;\\n            }\\n          },{\\n            title: '操作',\\n            dataIndex: 'op',\\n            width: 120,\\n            render: (value, row, index) => {\\n              return (\\n                <div style={{color: '#ccc'}}>\\n                  <a href=\\\"javascript:;\\\" onClick={(e) => {\\n                    e.stopPropagation();  //避免触发rowClick事件\\n                    alert('编辑')\\n                  }}>编辑</a>\\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\\n                  <a href=\\\"javascript:;\\\" onClick={(e) => {\\n                    e.stopPropagation();  //避免触发rowClick事件\\n                    alert('删除')\\n                  }}>删除</a>\\n                </div>\\n              );\\n            }\\n          }]}\\n          rowClick={(row) => {\\n            console.log(row);\\n          }}\\n          rowSelection={{\\n            // value: this.state.tableSelection,\\n            onSelect: (selected, row, selectedRows) => {\\n              console.log(selected, row, selectedRows);\\n              let tableSelection = this.state.tableSelection;\\n              tableSelection = selectedRows;\\n              this.setState({tableSelection});\\n            },\\n            onSelectAll: (selected, selectedRows) => {\\n              console.log(selected, selectedRows);\\n              let tableSelection = this.state.tableSelection;\\n              tableSelection = selectedRows;\\n              this.setState({tableSelection});\\n            }\\n          }}>\\n        </Table>\\n      </div>\\n    )\\n  }\\n```\\n:::\\n\\n\\n### Attributes\\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\\n|---------- |-------- |---------- |-------------  |-------- |\\n| columns   |  表格字段  | object[] |   -  |    []  |\\n| dataSource  |  表格数据  | object[] |   -  |    []  |\\n| bordered   |  是否带边框  | boolean |   -  |    false |\\n| radius   |  是否圆角  | boolean |   -  |    false  |\\n| striped   |  是否间隔变色  | boolean |   -  |    false  |\\n| isLoading   |  是否加载中  | boolean |   -  |    false  |\\n| maxCellSize   |  单元格最多显示字符数，超过显示...  | number |   -  |    20  |\\n| rowSelection  |  选中行配置 | object |   -  |    -  |\\n| defaultExpandAllRows  | 是否展开所有行 | boolean |   -  |    false  |\\n| defaultExpandedRowKeys  | 默认展开所有行 | string[] / number[] |   -  |    -  |\\n| expandedRowKeys  | 展开的行，控制属性 | string[] / number[] |   -  |    -  |\\n| expandedRowRender  | 展开行渲染函数 | (row, index) => ReactNode |   -  |    -  |\\n| rowClassName  | 筛选行添加样式 | (row) => string |   -  |    -  |\\n\\n### Events\\n| 事件名称 | 说明 | 回调参数 |\\n|---------- |-------- |---------- |\\n| rowClick | 点击row触发的事件 |  row |\\n| onExpand | 点击展开行icon触发的事件 |  (expanded, row) |\\n\\n\\n### rowSelection\\n| 参数\\t | 说明 | 类型\\t | 默认值 |\\n|---------- |-------- |---------- | -----|\\n| value | 选中的行 | string[]\\t | [] |\\n| fixed\\t | 把选择框列固定在左边\\t |  boolean\\t | - |\\n| onSelect | 用户手动选择/取消选择某行的回调\\t | Function(selected, row, selectedRows)\\t| - |\\n| onSelectAll | 用户手动选择/取消选择所有行的回调\\t\\t | Function(selected, selectedRows)\\t| - |\""],"sourceRoot":""}