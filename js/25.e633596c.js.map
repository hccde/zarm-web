{"version":3,"sources":["webpack:///./components/message/demo.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/25.e633596c.js","sourcesContent":["export default \"## Message 全局提示\\n\\n全局展示操作反馈信息。\\n\\n### 使用方法\\n\\n用户操作控件后，需要提示信息、成功、错误时。 浮于顶部居中，3s后自动消失，不会打断用户操作。\\n\\n:::demo 通过`theme`属性设置提示主题类型。\\n```js\\nimport { Message, Button } from 'dragon-ui';\\n\\nclass Demo extends React.Component {\\n  showSuccess () {\\n    Message.success('这是一条成功的消息提示，出现在网站顶部3s后消失')\\n  }\\n\\n  showError () {\\n    Message.danger('这是一条错误的消息提示，出现在网站顶部3s后消失')\\n  }\\n\\n  showWarning () {\\n    Message.warning('这是一条警告的消息提示，出现在网站顶部3s后消失')\\n  }\\n\\n  showLoading () {\\n    Message.loading('这是一条Loading的消息提示，出现在网站顶部3s后消失')\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button onClick={() => this.showWarning()}>警告提示</Button>\\n        <Button onClick={() => this.showSuccess()}>成功提示</Button>\\n        <Button onClick={() => this.showError()}>错误提示</Button>\\n        <Button onClick={() => this.showLoading()}>加载提示</Button>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode)\\n```\\n:::\\n\\n### 自定义关闭时长\\n\\n自定义关闭时长，鼠标移入时会重置timer，移出时候再重新计算关闭时长\\n\\n:::demo 通过`stayTime`属性设置显示时长\\n```js\\nimport { Message, Button } from 'dragon-ui';\\n\\nclass Demo extends React.Component {\\n  showMessage () {\\n    Message.config({\\n      theme: 'loading',\\n      message: '这是一条Loading的消息提示，出现在网站顶部8s后消失',\\n      stayTime: 8000\\n    })\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button onClick={() => this.showMessage()}>延迟关闭</Button>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode)\\n```\\n:::\\n\\n\\n\\n\\n### Attributes\\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\\n|---------- |-------- |---------- |-------------  |-------- |\\n| type     | 类型   | string  |   primary, success, warning, danger, loading        |    info    |\\n| message  | 展示内容   | string/React.ReactElement  |   -      |    -    |\\n| stayTime | 显示时长(ms) | number  |   -     |    3000    |\\n\""],"sourceRoot":""}