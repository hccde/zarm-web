{"version":3,"sources":["webpack:///./components/menu/menu.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/24.6fb5dd7c.js","sourcesContent":["export default \"## Menu 导航菜单\\n为侧边栏或下拉框等组件提供导航菜单列表。\\n\\n### 水平导航\\n\\n设置mode属性为horizontal\\n\\n:::demo 可以给每一个Menu.Item设置key，并通过defaultSelectedKeys设置默认值\\n```js\\n  render() {\\n    return (\\n      <Menu mode=\\\"horizontal\\\" defaultSelectedKeys={['a']}>\\n        <Menu.Item key=\\\"a\\\">意健险</Menu.Item>\\n        <Menu.Item key=\\\"b\\\">健康险个险</Menu.Item>\\n        <Menu.Item key=\\\"c\\\">雇主责任险</Menu.Item>\\n        <Menu.Item key=\\\"d\\\">运营后台管理</Menu.Item>\\n        <Menu.Item key=\\\"e\\\">公共功能</Menu.Item>\\n        <Menu.Item key=\\\"f\\\">询报价</Menu.Item>\\n      </Menu>\\n    )\\n  }\\n```\\n:::\\n\\n### 侧边导航\\n\\n默认的inline菜单模式\\n\\n:::demo\\n```js\\n  render() {\\n    const wrapperStyle = {\\n      width: 238,\\n      border: '1px solid #e3e3e3'\\n    }\\n    return (\\n      <div style={wrapperStyle}>\\n        <Menu>\\n          <Menu.SubMenu title=\\\"新契约\\\">\\n            <Menu.Item>投保单复核</Menu.Item>\\n            <Menu.Item>在线投保单管理</Menu.Item>\\n            <Menu.Item>投保单录入</Menu.Item>\\n            <Menu.Item>新增计划</Menu.Item>\\n          </Menu.SubMenu>\\n          <Menu.SubMenu title=\\\"核保\\\">\\n            <Menu.Item>核保权限定义</Menu.Item>\\n            <Menu.Item>核保权限分配</Menu.Item>\\n            <Menu.Item>规则配置</Menu.Item>\\n            <Menu.Item>人工核保</Menu.Item>\\n          </Menu.SubMenu>\\n          <Menu.SubMenu title=\\\"批改\\\">\\n            <Menu.Item>批改新增</Menu.Item>\\n            <Menu.Item>批改复核</Menu.Item>\\n            <Menu.Item>批改回退</Menu.Item>\\n            <Menu.Item>批改共享池</Menu.Item>\\n          </Menu.SubMenu>\\n        </Menu>\\n      </div>\\n    )\\n  }\\n```\\n:::\\n\\n### 多层嵌套\\n\\nSubMenu内可以继续嵌套SubMenu\\n\\n:::demo 理赔子菜单下有理赔工作流子菜单\\n```js\\n  constructor(props) {\\n    super(props)\\n    this.state = {\\n      collapse: false\\n    }\\n  }\\n  toggleCollapse(){\\n    this.setState({ collapse: !this.state.collapse })\\n  }\\n\\n  render() {\\n    const wrapperStyle = {\\n      width: 256,\\n    }\\n    return (\\n      <div>\\n        <div style={wrapperStyle}>\\n          <Button theme=\\\"primary\\\" onClick={this.toggleCollapse.bind(this)} style={{ marginBottom: 16 }}>切换</Button>\\n          <Menu inlineCollapsed={this.state.collapse}>\\n            <Menu.SubMenu title={<span><Icon type=\\\"user-fill\\\" /><span>理赔</span></span>}>\\n              <Menu.Item><span>报案</span></Menu.Item>\\n              <Menu.Item><span>任务分配</span></Menu.Item>\\n              <Menu.SubMenu title={<React.Fragment><span>理赔工作流</span></React.Fragment>}>\\n                <Menu.Item><span>休假维护</span></Menu.Item>\\n                <Menu.Item><span>时效维护</span></Menu.Item>\\n              </Menu.SubMenu>\\n            </Menu.SubMenu>\\n            <Menu.SubMenu title={<span><Icon type=\\\"user\\\" /><span>新契约</span></span>}>\\n              <Menu.Item><span>投保单复核</span></Menu.Item>\\n              <Menu.Item><span>在线投保单管理</span></Menu.Item>\\n              <Menu.Item><span>投保单录入</span></Menu.Item>\\n              <Menu.Item><span>新增计划</span></Menu.Item>\\n            </Menu.SubMenu>\\n            <Menu.SubMenu title={<span><Icon type=\\\"folder-fill\\\" /><span>核保</span></span>}>\\n              <Menu.Item><span>核保权限定义</span></Menu.Item>\\n              <Menu.Item><span>核保权限分配</span></Menu.Item>\\n              <Menu.Item><span>规则配置</span></Menu.Item>\\n              <Menu.Item><span>人工核保</span></Menu.Item>\\n            </Menu.SubMenu>\\n            <Menu.Item><Icon type=\\\"folder\\\" /><span>批改</span></Menu.Item>\\n          </Menu>\\n        </div>\\n      </div>\\n    )\\n  }\\n```\\n:::\\n\\n### 深色主题\\n\\n通过theme属性设置菜单颜色主题\\n\\n:::demo\\n```js\\n  render() {\\n    const wrapperStyle = {\\n      width: 238,\\n      border: '1px solid #e3e3e3',\\n      backgroundColor: '#001529'\\n    }\\n    return (\\n      <div style={wrapperStyle}>\\n        <Menu theme=\\\"dark\\\">\\n          <Menu.SubMenu title=\\\"新契约\\\">\\n            <Menu.Item>投保单复核</Menu.Item>\\n            <Menu.Item>在线投保单管理</Menu.Item>\\n            <Menu.Item>投保单录入</Menu.Item>\\n            <Menu.Item>新增计划</Menu.Item>\\n          </Menu.SubMenu>\\n          <Menu.SubMenu title=\\\"核保\\\">\\n            <Menu.Item>核保权限定义</Menu.Item>\\n            <Menu.Item>核保权限分配</Menu.Item>\\n            <Menu.Item>规则配置</Menu.Item>\\n            <Menu.Item>人工核保</Menu.Item>\\n          </Menu.SubMenu>\\n          <Menu.SubMenu title=\\\"批改\\\">\\n            <Menu.Item>批改新增</Menu.Item>\\n            <Menu.Item>批改复核</Menu.Item>\\n            <Menu.Item>批改回退</Menu.Item>\\n            <Menu.Item>批改共享池</Menu.Item>\\n          </Menu.SubMenu>\\n        </Menu>\\n      </div>\\n    )\\n  }\\n```\\n:::\\n\\n### 只展开一个子菜单\\n\\n可以通过openKeys属性控制展开项\\n\\n:::demo 可通过defaultOpenKeys设置默认展开项，通过onOpenChange回调设置openKeys\\n```js\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      openKeys: ['a']\\n    }\\n  }\\n  onOpenChange(openKeys) {\\n    const lastKey = openKeys.pop();\\n    this.setState({\\n      openKeys: [lastKey]\\n    });\\n  }\\n  render() {\\n    const wrapperStyle = {\\n      width: 238,\\n      border: '1px solid #e3e3e3',\\n      backgroundColor: '#001529'\\n    }\\n    const { openKeys } = this.state;\\n    return (\\n      <div style={wrapperStyle}>\\n        <Menu\\n          theme=\\\"dark\\\"\\n          openKeys={openKeys}\\n          defaultOpenKeys={['a']}\\n          onOpenChange={(keys) => this.onOpenChange(keys)}\\n        >\\n          <Menu.SubMenu title=\\\"新契约\\\" key=\\\"a\\\">\\n            <Menu.Item>投保单复核</Menu.Item>\\n            <Menu.Item>在线投保单管理</Menu.Item>\\n            <Menu.Item>投保单录入</Menu.Item>\\n            <Menu.Item>新增计划</Menu.Item>\\n          </Menu.SubMenu>\\n          <Menu.SubMenu title=\\\"核保\\\" key=\\\"b\\\">\\n            <Menu.Item>核保权限定义</Menu.Item>\\n            <Menu.Item>核保权限分配</Menu.Item>\\n            <Menu.Item>规则配置</Menu.Item>\\n            <Menu.Item>人工核保</Menu.Item>\\n          </Menu.SubMenu>\\n          <Menu.SubMenu title=\\\"批改\\\" key=\\\"c\\\">\\n            <Menu.Item>批改新增</Menu.Item>\\n            <Menu.Item>批改复核</Menu.Item>\\n            <Menu.Item>批改回退</Menu.Item>\\n            <Menu.Item>批改共享池</Menu.Item>\\n          </Menu.SubMenu>\\n        </Menu>\\n      </div>\\n    )\\n  }\\n```\\n:::\\n\\n\\n### Menu Attributes\\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\\n|---------- |-------- |---------- |-------------  |-------- |\\n| mode   |  菜单模式  | string |  horizontal / inline     |    inline   |\\n| theme   |  颜色主题 | string |  light / dark    |    dark   |\\n| defaultOpenKeys   |  默认打开的子菜单keys | string[] |  -    |    []   |\\n| defaultSelectedKeys   |  默认选中的菜单项keys | string[] |  -    |    []   |\\n| openKeys   |  打开的子菜单keys | string[] |  -    |    -   |\\n| selectedKeys   |  选中的菜单项keys | string[] |  -    |    -   |\\n| inlineIndent   | inline模式菜单每一级子菜单的缩进距离 | number |  -    |    24   |\\n\\n\\n### Menu Events\\n| 事件名称 | 说明 | 回调参数 |\\n|---------- |-------- |---------- |\\n| onOpenChange | 子菜单展开收缩时候触发的事件 | openKeys |\\n\\n\\n### Menu.SubMenu Attributes\\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\\n|---------- |-------- |---------- |-------------  |-------- |\\n| title   |  子菜单标题  | string |  -     |    -   |\\n| key   |  子菜单的key值 | string |  -   |    -  |\\n\\n\\n### Menu.Item Attributes\\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\\n|---------- |-------- |---------- |-------------  |-------- |\\n| disabled   |  是否禁用  | boolean |  -   |   false   |\\n| key   |  菜单项的key值 | string |  -   |    -  |\\n\\n\\n### Menu.Item Events\\n| 事件名称 | 说明 | 回调参数 |\\n|---------- |-------- |---------- |\\n| onClick | 点击菜单项的时候触发的事件 | itemKey |\\n| onDoubleClick | 双击菜单项的时候触发的事件 | - |\\n\""],"sourceRoot":""}